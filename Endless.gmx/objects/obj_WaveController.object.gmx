<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 3600 //time per wave this is actually 30 seconds


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn Chance
global.Wave += 1 //change wave number
alarm[0] = 3600 // start alarm again
//This works by the higher the number the less likely to spawn

if (global.ChanceOfSpawn &gt; 25) //make more frequent changes
{
global.ChanceOfSpawn -= 5
}

if(global.ChanceOfSpawn &lt;= 25) //it stays at 25 when it gets to 25 or less....
{
global.ChanceOfSpawn = 25
}

if (global.FatFuckSpawn &gt; 150) //make more frequent changes slow fucker
{
global.FatFuckSpawn -= 5
}

if(global.FatFuckSpawn &lt;= 150) //it stays at 25 when it gets to 25 or less....
{
global.FatFuckSpawn = 150
}

if (global.FastFuckSpawn &gt; 200) //make more frequent changes Fast fucker
{
global.FastFuckSpawn -= 5
}

if(global.FastFuckSpawn &lt;= 200) //it stays at 25 when it gets to 25 or less....
{
global.FastFuckSpawn = 200
}

if (global.SlicerSpawn &gt; 300) //make more frequent changes Fast fucker
{
global.SlicerSpawn -= 8
}

if(global.SlicerSpawn &lt;= 300) //it stays at 25 when it gets to 25 or less....
{
global.SlicerSpawn= 300
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reticle So doesn't show for controller

if(instance_exists(obj_ControllerReticle) == true)
{
    obj_ControllerReticle.visible = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
