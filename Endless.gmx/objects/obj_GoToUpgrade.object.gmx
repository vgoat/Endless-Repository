<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Upgrades</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-16</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_released(vk_tab) or gamepad_button_check_released(0,gp_select)) //this is for pausing
{
        global.GameIsPaused = 0
    
        global.IAmPaused = false
        instance_activate_all();
        //When you press O it deletes these
        scr_DeletePauseandUpgrades() //delete all items
        scr_DeletePauseandGunBuys()
        
        with(obj_ControllerReticle) //this so the cursor does not show up again..
        {
            instance_destroy()
        }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ControllerReticle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gamepad_button_check_released(0, gp_shoulderrb) || gamepad_button_check_released(0, gp_shoulderlb))
{
scr_DeletePauseandGunBuys()

if(global.GameIsPaused == 1)
    { 
        
        with(obj_Reticle)
        {
            instance_destroy() //so it destroys the reticle everytimeyou pause
        }
            
        instance_deactivate_all(true);
        scr_Upgrades_Bought()//show upgrades
        instance_create(view_xview[0] + 438, view_yview[0] + 992,obj_MainMenuPM)
        instance_create(view_xview[0] + 1632, view_yview[0] + 992,obj_QuitPS)
        //GUI for Cost Items and Pause and Drawing the backgrounds
        instance_create(view_xview[0] + 928, view_yview[0] + 96,obj_HPCost)
        instance_create(view_xview[0] + 928, view_yview[0] + 96,obj_TurretCost)
        instance_create(view_xview[0] + 928, view_yview[0] + 96,obj_C4Cost)
        instance_create(view_xview[0] + 928, view_yview[0] + 96,obj_ShotgunMineCost)
        instance_create(view_xview[0] + 960, view_yview[0] + 992,obj_GoToPause)
        instance_create(view_xview[0] + 64, view_yview[0] + 0,obj_DrawBackground)
        
        if gamepad_is_connected(0) = true
        {
            instance_create(view_xview[0] + 640, view_yview[0] + 256,obj_ControllerReticle)
        }
        else
        {
            instance_create(view_xview[0] +x,view_yview[0] +y,obj_Reticle)//reticle so it stays bitch! // this loops so it stays always
        }
    }
    else
    {
        global.GameIsPaused = 0
        instance_activate_all();
        //When you press O it deletes these
        scr_DeletePauseandUpgrades() //delete all items
        
        with(obj_ControllerReticle) //this so the cursor does not show up again..
        {
            instance_destroy()
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_DeletePauseandGunBuys()

if(global.GameIsPaused == 1)
    { 
        
        with(obj_Reticle)
        {
            instance_destroy() //so it destroys the reticle everytimeyou pause
        }
            
        instance_deactivate_all(true);
        scr_Upgrades_Bought()//show upgrades
        instance_create(view_xview[0] + 416, view_yview[0] + 928,obj_MainMenuPM)
        instance_create(view_xview[0] + 1600, view_yview[0] + 928,obj_QuitPS)
        //GUI for Cost Items and Pause and Drawing the backgrounds
        instance_create(view_xview[0] + 928, view_yview[0] + 96,obj_HPCost)
        instance_create(view_xview[0] + 928, view_yview[0] + 96,obj_TurretCost)
        instance_create(view_xview[0] + 928, view_yview[0] + 96,obj_C4Cost)
        instance_create(view_xview[0] + 928, view_yview[0] + 96,obj_ShotgunMineCost)
        instance_create(view_xview[0] + 992, view_yview[0] + 928,obj_GoToPause)
        instance_create(view_xview[0] + 0, view_yview[0] + 0,obj_DrawBackground)
        
        if gamepad_is_connected(0) = true
        {
            instance_create(view_xview[0] + 640, view_yview[0] + 256,obj_ControllerReticle)
        }
        else
        {
            instance_create(view_xview[0] +x,view_yview[0] +y,obj_Reticle)//reticle so it stays bitch! // this loops so it stays always
        }
    }
    else
    {
        global.GameIsPaused = 0
        instance_activate_all();
        //When you press O it deletes these
        scr_DeletePauseandUpgrades() //delete all items
        
        with(obj_ControllerReticle) //this so the cursor does not show up again..
        {
            instance_destroy()
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
