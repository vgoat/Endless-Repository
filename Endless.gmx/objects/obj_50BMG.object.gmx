<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_50BMG</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_CharecterParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.ActivePlayer = id
global.drawimage = 0
image_angle = point_direction(x, y, mouse_x, mouse_y); // point towards mouse1

oldx = mouse_x;
oldy = mouse_y;

view_object[0] = id

if(global.DialogueActive == 0)
{
    alarm[4]=500
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.drawimage = 0//this is for muzzle flash
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dialogue
global.DialogueActive = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dialogue
global.DialogueActive = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///REload Mag
if(global.BMGMag == 0)
{
    if (global.BMGAmmo &lt;= 5 &amp;&amp; global.BMGAmmo &gt; 0)
    {
        global.BMGMag = global.BMGAmmo
        global.BMGAmmo -= global.BMGMag
        obj_BMGBar.image_index = 0;
    
    }
    
    if (global.BMGAmmo &gt; 5)
    {
        global.BMGAmmo -= 5
        global.BMGMag = 5
        obj_BMGBar.image_index = 0;
    }
}
else
{
    var ThisIsFor = global.BMGAmmo + global.BMGMag //This is to fix issue with losing mag

    if (global.BMGAmmo &lt; 5 &amp;&amp; global.BMGAmmo &gt; 0)
    {
        if(ThisIsFor &gt;= 5)
        {
            global.BMGAmmo -= 5 - global.BMGMag
            global.BMGMag = 5
        }      
        else
        {
            global.BMGMag = global.BMGAmmo
            global.BMGAmmo -= global.BMGMag
        } 
    }
    
    if (global.BMGAmmo &gt;= 5)
    {
        global.BMGAmmo -= 5 - global.BMGMag //Acct for reloading anytime
        global.BMGMag = 5
        obj_BMGBar.image_index = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death an Controls
if (global.HealthPoints &lt;= 0)
{
    room_goto(ScoreScreenWhenYouDie);
    StopAllDialougeMale()
}

var axis_hr = gamepad_axis_value(0, gp_axisrh)
var axis_vr = gamepad_axis_value(0, gp_axisrv)
var dirr = point_direction(0, 0, axis_hr, axis_vr);
var distr = point_distance(0, 0, axis_hr, axis_vr);

KeyboardAndGamepad() // this is for keyboard and gamepad movement
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapon Cycling

if (gamepad_button_check_released(0,gp_shoulderr) or keyboard_check_released(ord("E"))) //this is right button to go to next
{
    WeaponNext() //to go to Next weapon
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////

if (gamepad_button_check_released(0,gp_shoulderl) or keyboard_check_released(ord("Q"))) //this is left button to go to prev
{
    WeaponPrev() //to go to previous weapon
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire Controls
if (gamepad_button_check_released(0, gp_shoulderrb) || gamepad_button_check_released(0, gp_shoulderlb)) //left or right trigger release
   {
    if global.BMGMag == 0
    {
        audio_play_sound(snd_DryFire,1,false);
    }
    else //if their is some shit
    {
    
    global.ShotsFired += 1 // for stats
    
    var obj = instance_create(x, y,obj_50BMGBullet); //create moving bullet towards facing area
        with(obj) 
        {
            speed = 45;
            direction = point_direction( 0, 0, axis_hr, axis_vr);
            //etc
        }
        
         audio_play_sound(snd_50BMGF,1,false);
        
        global.BMGMag -= 1
        global.drawimage = 1//this is for muzzle flash

        if (global.BMGMag == 0) //if pistol mag = 0 show last item...
            {
                global.ActiveAmmoBar.image_index = 4;
            }

        else
            {
                global.ActiveAmmoBar.image_index += 1
            }
    }

   }
   

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reload
if (gamepad_button_check_released(0,gp_face3)or keyboard_check_released(ord("R")) or mouse_check_button_released(mb_right))
{
    if (global.BMGMag != 5)
    {
        if(global.BMGAmmo == 0)
        {
            audio_play_sound(snd_DryFire,0,false);
        }
        else
        {
            audio_stop_sound(snd_50BMGReload)
            audio_play_sound(snd_50BMGReload,0,false);
            alarm[0]=120;
        
            EnableReloadQuotes() //for the purpose of reload dialouge
        }
    }  
    else //dry fire
    
    {
        audio_play_sound(snd_DryFire,0,false);
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///C4 Placement
if (gamepad_button_check_released(0,gp_face2) or keyboard_check_released(ord("F"))) //this is for c4
{
    if (global.C4InStock &gt; 0) //this is if you have c4 in stock
    {
        instance_create(x,y,obj_C4)
        global.C4InStock -= 1
    }
    
    if (global.C4InStock == 0 ) //so if you dont have points
    {
        audio_play_sound(snd_DryFire,1,false) //dry fire if you don thave points
    } 
}
if (gamepad_button_check_released(0,gp_face1) or keyboard_check_released(ord("G"))) //this is for c4 detonation instance check
{
    with(obj_C4)
    {
        if (instance_count == 0)
        {
            audio_play_sound(snd_DryFire,1,false) //dry fire if you don thave points
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Health Packs
if (keyboard_check_released(ord("H")) or gamepad_button_check_released(0,gp_padu)) //this is for use of medpacks
{
    scr_HealthPacks()//Health Pack Code Includes Not Using Health if FUll
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Place Shotgun Mine
if (gamepad_button_check_released(0,gp_padu) or keyboard_check_released(ord("T")))
{
    if(global.ShotgunMines &gt; 0)
    {
        instance_create(x,y,obj_ShotgunMine)
        global.ShotgunMines -= 1
    }
    else
    {
        audio_play_sound(snd_DryFire,1,false)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_EnemyBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.HealthPoints -= 15; //minues 15 health and add to health bar index 
//Minus one health
if(global.HealthUpgradeBought = 0) //for upgrade
{
    obj_SoldierClassHealthBar.image_index += 15;
}
else
{
    obj_HealthBarUpgraded.image_index += 15;
}

//if health points = 0
if (global.HealthPoints &lt;= 0)
{
    room_goto(ScoreScreenWhenYouDie);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_AllAmmoTin">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.M4Ammo = 450
global.ShotgunAmmo = 80
global.M60Ammo = 600
global.SniperAmmo = 80
global.DesertEagleAmmo = 108
global.MP9Ammo = 300
global.G11Ammo = 450
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>405</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_dice</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>StopAllDialougeMale</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Choice = choose(1,2) //this is choice for two options

switch(Choice) //plays one of the two sounds
{
case 1: {audio_play_sound(ALAM1,1,false)} break; // for all ammo

case 2: {audio_play_sound(ALAM2,1,false)} break;

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>WeaponPrev() //to go to previous weapon
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>WeaponNext() //to go to next weapon

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.BMGMag == 0
{
    audio_play_sound(snd_DryFire,1,false);
}
else //if their is some shit
{

    global.ShotsFired += 1 // for stats

    var obj = instance_create(x, y,obj_50BMGBullet); //create moving bullet towards facing area
    with(obj) 
    {
        speed = 45;
        direction = point_direction( x, y,mouse_x, mouse_y);
        image_angle = direction
        //etc
    }
    
    audio_play_sound(snd_50BMGF,1,false);
    
    global.BMGMag -= 1
    global.drawimage = 1
    

    if (global.BMGMag == 0) //if pistol mag = 0 show last item...
        {
            global.ActiveAmmoBar.image_index = 4;
        }

    else
        {
            global.ActiveAmmoBar.image_index += 1
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.drawimage == 1)
{
    draw_sprite_ext(spr_50BMGFire,0,x,y,1,1,image_angle,c_white,1)
    alarm[9] = 1
}
//image_angle so it draws rotation and ext makes it so you can do this
draw_sprite_ext(spr_50BMG,0,x,y,1,1,image_angle,c_white,1)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>13,12</point>
    <point>13,13</point>
  </PhysicsShapePoints>
</object>
